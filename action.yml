name: 'Prepare and run scripts in Node.js environment'
description: 'Setup Node.js environment and run scripts. Uses caches for node and npm_modules.'
author: 'GitHub'
inputs:
  node-version:
    description: 'Concrete Node.js version to use'
  matrix-node-version:
    description: 'Version Spec array, i.e. from matrix.node-version. Latest will be selected from this array and setup-node will be run with the selected version.'
  matrix-node-version-earliest:
    description: 'Set this option if you want the action to select for the earliest available version that satisfies the version spec.'
    default: 'false'
  install-script:
    description: 'Bash script to run after setting up Node.js.'
    default: 'npm ci'
  run-script:
    description: 'Bash script to run after setting up Node.js.'

runs:
  using: composite
  steps:
    - id: echo
      shell: bash
      run: |
        echo "Running setup-node with inputs:"
        echo "node-version: ${{ inputs.node-version }}"
        echo "matrix-node-version: ${{ inputs.matrix-node-version }}"
        echo "matrix-node-version-earliest: ${{ inputs.matrix-node-version-earliest }}"
        echo "install-script: ${{ inputs.install-script }}"
        echo "run-script: ${{ inputs.run-script }}"

    - id: setup-node
      uses: kt-actions/setup-node-minmax@v1
      with:
        node-version: ${{ inputs.node-version }}
        matrix-node-version: ${{ inputs.matrix-node-version }}
        matrix-node-version-earliest: ${{ inputs.matrix-node-version-earliest }}
        cache: npm
        cache-dependency-path: ./**/package-lock.json

    - id: npm-cache
      uses: actions/cache@v4
      with:
        path: ./**/node_modules
        key: ${{ runner.os }}-npm-${{ steps.setup-node.outputs.node-version }}-${{ hashFiles('**/package-lock.json') }}

    - id: install-script
      if: ${{ inputs.install-script != '' && steps.npm-cache.outputs.cache-hit != 'true' }}
      shell: bash
      run: |
        echo "Running install script..."
        eval "${{ inputs.install-script }}"

    - id: run-script
      if: ${{ inputs.run-script != '' }}
      shell: bash
      run: |
        echo "Running script..."
        eval "${{ inputs.run-script }}"
